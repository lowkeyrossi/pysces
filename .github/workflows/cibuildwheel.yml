name: CI build wheels

on:
  push:
    branches:
      - testing_wheels

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-11-arm]

    steps:
      - uses: actions/checkout@v4

      - name: Install LLVM for Windows ARM64
        shell: pwsh
        run: |
          Invoke-WebRequest https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.8/LLVM-20.1.8-woa64.exe -UseBasicParsing -OutFile LLVM-woa64.exe
          Start-Process -FilePath ".\LLVM-woa64.exe" -ArgumentList "/S" -Wait
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "CC=clang-cl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "FC=flang-new" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "AR=llvm-ar" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python Deps
        shell: pwsh
        run: |
          curl -L -o scipy.whl https://anaconda.org/scientific-python-nightly-wheels/scipy/1.17.0.dev0/download/scipy-1.17.0.dev0-cp311-cp311-win_arm64.whl
          python -m pip install scipy.whl
          pip install build
          pip install -r requirements.txt

      - name: Build and test
        shell: pwsh
        run: | 
          python -m build
          cd dist
          pip install /*.whl
          pysces.test()
          pysces.test(3)
          


